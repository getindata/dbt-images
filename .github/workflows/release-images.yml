name: Build & Publish dbt images

on:
  push:
    tags:
      - "dbt-dataops-*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [gcp, aws]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract tag
        id: tag-info
        run: |
          TAG_NAME=${GITHUB_REF#refs/*/}
          IMAGE_NAME=`echo $TAG_NAME | sed -e's/\(.*\)-\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\)\+/\1/'`
          IMAGE_VERSION=`echo $TAG_NAME | sed -e's/\(.*\)-\([[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\)\+/\2/'`
          echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
          echo "::set-output name=IMAGE_VERSION::$IMAGE_VERSION"

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}

      - name: Build ${{ steps.tag-info.outputs.IMAGE_NAME }}
        uses: docker/build-push-action@v2
        with:
          context: ./
          builder: ${{ steps.buildx.outputs.name }}
          target: ${{ matrix.platform }}
          push: true
          tags: gcr.io/getindata-images-public/${{ steps.tag-info.outputs.IMAGE_NAME }}:${{ matrix.platform }}-${{ steps.tag-info.outputs.IMAGE_VERSION }},gcr.io/getindata-images-public/${{ steps.tag-info.outputs.IMAGE_NAME }}:${{ matrix.platform }}-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
